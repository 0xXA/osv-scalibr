# TODO(#274): this should match the configuration of osv-scanner for the most part
#   currently it does not because using that config raises type errors,
#   in addition to some of the rules having violations that need addressing,
#   so the current focus is on getting as many linters as possible running

output:
  sort-results: true
linters:
  # TODO(#274): currently linting raises a type error, so until that's resolved we've got to be very selective in what we enable
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - canonicalheader
    - containedctx
    - contextcheck
    - copyloopvar
    - decorder
#    - depguard
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - errcheck
    - errchkjson
    - errname
#    - errorlint
#    - exhaustive
    - fatcontext
    - forbidigo
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoinits
    - gochecksumtype
#    - gocritic
#    - gofmt
    - goheader
    - goimports
    - gomoddirectives
    - gomodguard
    - goprintffuncname
#    - gosec
#    - gosimple
    - gosmopolitan
#    - govet
    - grouper
    - importas
    - inamedparam
    - ineffassign
    - interfacebloat
    - intrange
    - loggercheck
    - makezero
    - mirror
    - misspell
    - musttag
    - nakedret
    - nilerr
#    - nilnil
    - noctx
    - nolintlint
    - nosprintfhostport
    - perfsprint
#    - prealloc
    - predeclared
    - promlinter
#    - protogetter
    - reassign
    - revive
    - rowserrcheck
    - sloglint
    - spancheck
    - sqlclosecheck
    - staticcheck
#    - stylecheck
    - tagalign
    - tenv
    - testableexamples
    - testifylint
    - thelper
    - unconvert
#    - unparam
    - unused
    - usestdlibvars
    - wastedassign
    - whitespace
    - zerologlint
  disable-all: true
#  disable:
#    - nlreturn     # Not feasible until it's supported by the internal linter
#    - paralleltest # Parallel tests mixes up log lines of multiple tests in the internal test runner
#    - tparallel    # Parallel tests mixes up log lines of multiple tests in the internal test runner

linters-settings:
  forbidigo:
    forbid:
      # Parallel tests mixes up log lines of multiple tests in the internal test runner
      - p: ^testing.T.Parallel$
        pkg: ^testing$
    analyze-types: true
  revive:
    rules:
      - name: blank-imports
        disabled: false
      - name: context-as-argument
        disabled: false
      - name: context-keys-type
        disabled: false
      - name: dot-imports
        disabled: false
      - name: empty-block
        disabled: false
      - name: error-naming
        disabled: false
      - name: error-return
        disabled: false
      - name: error-strings
        disabled: false
      - name: errorf
        disabled: false
      - name: indent-error-flow
        disabled: false
      - name: range
        disabled: false
      - name: receiver-naming
        disabled: false
      - name: redefines-builtin-id
        disabled: false
      - name: superfluous-else
        disabled: false
      - name: time-naming
        disabled: false
      - name: unreachable-code
        disabled: false

issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  exclude-rules:
    - path: _test\.go
      linters:
        - dupl
